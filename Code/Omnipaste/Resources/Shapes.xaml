<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:models1="clr-namespace:Events.Models;assembly=Events"
                    xmlns:models="clr-namespace:Clipboard.Models;assembly=Clipboard"
                    xmlns:notification="clr-namespace:Omnipaste.Notification">

    <!-- Shapes -->
    <Style x:Key="ItemIcon" TargetType="Rectangle">
        <Setter Property="Margin" Value="14, 0" />
        <Setter Property="Height" Value="38" />
        <Setter Property="Width" Value="38" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Fill" Value="{DynamicResource GrayBrush2}" />
    </Style>

    <Style x:Key="ClippingSourceIconStyle" TargetType="Rectangle" BasedOn="{StaticResource ItemIcon}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Source}" Value="{x:Static models:Clipping+ClippingSourceEnum.Local}">
                <Setter Property="OpacityMask" Value="{DynamicResource LocalVisualBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Source}" Value="{x:Static models:Clipping+ClippingSourceEnum.Cloud}">
                <Setter Property="OpacityMask" Value="{DynamicResource CloudVisualBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EventTypeIconStyle" TargetType="Rectangle" BasedOn="{StaticResource ItemIcon}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Type}" Value="{x:Static models1:EventTypeEnum.IncomingCallEvent}">
                <Setter Property="OpacityMask" Value="{DynamicResource CallVisualBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type}" Value="{x:Static models1:EventTypeEnum.IncomingSmsEvent}">
                <Setter Property="OpacityMask" Value="{DynamicResource EnvelopeVisualBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EmptyListIconStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Fill" Value="{DynamicResource GrayNormalBrush}" />
        <Setter Property="OpacityMask">
            <Setter.Value>
                <VisualBrush Stretch="Uniform" Visual="{DynamicResource appbar_smiley_glasses}" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="CloseNotificationIconStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
        <Setter Property="OpacityMask">
            <Setter.Value>
                <VisualBrush Stretch="Uniform" Visual="{DynamicResource notification_close}" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="NotificationIconStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="15"/>
        <Setter Property="Fill" Value="{DynamicResource NotificationBackgroundBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Type}" Value="{x:Static notification:NotificationTypeEnum.Clipping}">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <VisualBrush Stretch="Uniform" Visual="{DynamicResource clipping_icon}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type}" Value="{x:Static notification:NotificationTypeEnum.IncomingCall}">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <VisualBrush Stretch="Uniform" Visual="{DynamicResource phone_icon}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type}" Value="{x:Static notification:NotificationTypeEnum.IncomingSMS}">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <VisualBrush Stretch="Uniform" Visual="{DynamicResource sms_icon}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type}" Value="{x:Static notification:NotificationTypeEnum.Link}">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <VisualBrush Stretch="Uniform" Visual="{DynamicResource link_icon}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NotificationExpandContentIconStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="7.5"/>
        <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
        <Setter Property="OpacityMask">
            <Setter.Value>
                <VisualBrush Stretch="Uniform" Visual="{DynamicResource expand_icon}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NotificationCollapseContentIconStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="7.5"/>
        <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
        <Setter Property="OpacityMask">
            <Setter.Value>
                <VisualBrush Stretch="Uniform" Visual="{DynamicResource collapse_icon}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NotificationContentSeparatorStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="Fill" Value="{DynamicResource NotificationHelperButtonBrush}"/>
    </Style>

    <Style x:Key="HeaderItemContainerStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Margin" Value="9,1,9,1"/>
        <Setter Property="Fill" Value="{DynamicResource IdealForegroundColorBrush}"/>
    </Style>

    <Style x:Key="HeaderItemSeparatorStyle" TargetType="Rectangle">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Opacity" Value="0.25"/>
        <Setter Property="Width" Value="1"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Fill" Value="{DynamicResource IdealForegroundColorBrush}"/>
        <Setter Property="Margin" Value="8,0,0,0"/>
    </Style>

    <Style x:Key="ActivityIcon" TargetType="Rectangle">
        <Setter Property="MinWidth" Value="13" />
        <Setter Property="MinHeight" Value="13" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="OpacityMask">
            <Setter.Value>
                <VisualBrush Stretch="Uniform" Visual="{DynamicResource circle_icon}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,19,0,0"/>
    </Style>

    <Style x:Key="ActivityIconBorder" TargetType="Ellipse">
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Fill" Value="{DynamicResource ContentBackgroundBrush}"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,16,0,0"/>
    </Style>
</ResourceDictionary>
